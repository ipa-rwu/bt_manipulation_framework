include:
  - local: ci/gitlab_templates/RULES.yml

variables:
  UPSTREAM_WORKSPACE: 'upstream.repos'
  DEFAULT_ROS_DISTROS: humble
  ROS_DISTROS: humble rolling
  STABLE_BRANCH: ros2
  DOC_NAME: bt_manipulation_framework_guide

.common:
  tags: &ipa_runner
    - asprunner

precommit:
  tags: *ipa_runner
  stage: precommit
  image: python:3.12.0b4-slim
  before_script:
    - apt update && apt install -y --no-install-recommends git
    - pip install pre-commit
    - apt install -y --no-install-recommends clang-format-14
  script:
    - pre-commit run --all-files

.build:
  stage: build
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq git-core
    - git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci
  script: .industrial_ci/gitlab.sh ROS_DISTRO=${ROS_DISTRO}
  services: []
  variables:
    ISOLATION: shell
  tags: *ipa_runner

framework:
  extends:
    - .build
    - .on_allow_failure
  image: ros:${ROS_DISTRO}-ros-core
  parallel:
    matrix:
      - ROS_DISTRO:
        - humble

doc:
  image: "asciidoctor/docker-asciidoctor"
  tags:
    - intranet
  stage: doc
  before_script:
    - apk add graphicsmagick-dev ruby-dev musl-dev gcc
    - gem install prawn-gmagick asciidoctor-diagram
  script:
    - asciidoctor-pdf -a pdf-style=doc/theme.yml -r asciidoctor-diagram -v --failure-level=INFO "doc/${DOC_NAME}.adoc" -o "${DOC_NAME}.pdf"
    - asciidoctor -r asciidoctor-diagram -v --failure-level=INFO "doc/${DOC_NAME}.adoc" -o "index.html" -D html
    - cp -r doc/images html
  artifacts:
    paths:
      - ${DOC_NAME}.pdf
      - html/
    expire_in: 1 hour


pages:
  tags:
    - intranet
  stage: deploy
  dependencies:
    - doc
  script:
    - mv html public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "ros2"'

stages:
  - precommit
  - build
  - doc
  - deploy
